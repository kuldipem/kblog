<?php

/* SensioDistributionBundle:Configurator:check.html.twig */
class __TwigTemplate_1267fd27c328d43597ad9e431c5858193ada3621b93443d801ab3db6247f7cf5 extends Twig_Template
{
    public function __construct(Twig_Environment $env)
    {
        parent::__construct($env);

        $this->parent = $this->env->loadTemplate("SensioDistributionBundle::Configurator/layout.html.twig");

        $this->blocks = array(
            'content' => array($this, 'block_content'),
        );
    }

    protected function doGetParent(array $context)
    {
        return "SensioDistributionBundle::Configurator/layout.html.twig";
    }

    protected function doDisplay(array $context, array $blocks = array())
    {
        $this->parent->display($context, array_merge($this->blocks, $blocks));
    }

    // line 3
    public function block_content($context, array $blocks = array())
    {
        // line 4
        echo "    ";
        if (twig_length_filter($this->env, (isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors")))) {
            // line 5
            echo "        <h1>Major Problems that need to be fixed now</h1>
        <p>
            We have detected <strong>";
            // line 7
            echo twig_escape_filter($this->env, twig_length_filter($this->env, (isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors"))), "html", null, true);
            echo "</strong> major problems.
            You <em>must</em> fix them before continuing:
        </p>
        <ol>
            ";
            // line 11
            $context['_parent'] = (array) $context;
            $context['_seq'] = twig_ensure_traversable((isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors")));
            foreach ($context['_seq'] as $context["_key"] => $context["message"]) {
                // line 12
                echo "                <li>";
                echo twig_escape_filter($this->env, (isset($context["message"]) ? $context["message"] : $this->getContext($context, "message")), "html", null, true);
                echo "</li>
            ";
            }
            $_parent = $context['_parent'];
            unset($context['_seq'], $context['_iterated'], $context['_key'], $context['message'], $context['_parent'], $context['loop']);
            $context = array_intersect_key($context, $_parent) + $_parent;
            // line 14
            echo "        </ol>
    ";
        }
        // line 16
        echo "
    ";
        // line 17
        if (twig_length_filter($this->env, (isset($context["minors"]) ? $context["minors"] : $this->getContext($context, "minors")))) {
            // line 18
            echo "        <h1>Some Recommendations</h1>

        <p>
            ";
            // line 21
            if (twig_length_filter($this->env, (isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors")))) {
                // line 22
                echo "            Additionally, we
            ";
            } else {
                // line 24
                echo "            We
            ";
            }
            // line 26
            echo "            have detected some minor problems that we <em>recommend</em> you to fix to have a better Symfony
            experience:

            <ol>
                ";
            // line 30
            $context['_parent'] = (array) $context;
            $context['_seq'] = twig_ensure_traversable((isset($context["minors"]) ? $context["minors"] : $this->getContext($context, "minors")));
            foreach ($context['_seq'] as $context["_key"] => $context["message"]) {
                // line 31
                echo "                    <li>";
                echo twig_escape_filter($this->env, (isset($context["message"]) ? $context["message"] : $this->getContext($context, "message")), "html", null, true);
                echo "</li>
                ";
            }
            $_parent = $context['_parent'];
            unset($context['_seq'], $context['_iterated'], $context['_key'], $context['message'], $context['_parent'], $context['loop']);
            $context = array_intersect_key($context, $_parent) + $_parent;
            // line 33
            echo "            </ol>
        </p>

    ";
        }
        // line 37
        echo "
    ";
        // line 38
        if ((!twig_length_filter($this->env, (isset($context["majors"]) ? $context["majors"] : $this->getContext($context, "majors"))))) {
            // line 39
            echo "        <ul class=\"symfony_list\">
            <li><a href=\"";
            // line 40
            echo twig_escape_filter($this->env, (isset($context["url"]) ? $context["url"] : $this->getContext($context, "url")), "html", null, true);
            echo "\">Configure your Symfony Application online</a></li>
        </ul>
    ";
        }
    }

    public function getTemplateName()
    {
        return "SensioDistributionBundle:Configurator:check.html.twig";
    }

    public function isTraitable()
    {
        return false;
    }

    public function getDebugInfo()
    {
        return array (  1414 => 421,  1408 => 419,  1402 => 417,  1400 => 416,  1398 => 415,  1394 => 414,  1385 => 413,  1383 => 412,  1380 => 411,  1367 => 405,  1361 => 403,  1355 => 401,  1353 => 400,  1351 => 399,  1347 => 398,  1341 => 397,  1339 => 396,  1336 => 395,  1323 => 389,  1317 => 387,  1311 => 385,  1309 => 384,  1307 => 383,  1303 => 382,  1297 => 381,  1291 => 380,  1287 => 379,  1283 => 378,  1279 => 377,  1273 => 376,  1271 => 375,  1268 => 374,  1256 => 369,  1251 => 368,  1249 => 367,  1246 => 366,  1237 => 360,  1231 => 358,  1228 => 357,  1223 => 356,  1221 => 355,  1218 => 354,  1211 => 349,  1202 => 347,  1198 => 346,  1195 => 345,  1192 => 344,  1190 => 343,  1187 => 342,  1179 => 338,  1177 => 337,  1174 => 336,  1168 => 332,  1162 => 330,  1159 => 329,  1157 => 328,  1154 => 327,  1145 => 322,  1143 => 321,  1118 => 320,  1115 => 319,  1112 => 318,  1109 => 317,  1106 => 316,  1103 => 315,  1100 => 314,  1098 => 313,  1095 => 312,  1088 => 308,  1084 => 307,  1079 => 306,  1077 => 305,  1074 => 304,  1067 => 299,  1064 => 298,  1056 => 293,  1053 => 292,  1051 => 291,  1048 => 290,  1040 => 285,  1036 => 284,  1032 => 283,  1029 => 282,  1027 => 281,  1024 => 280,  1016 => 276,  1014 => 272,  1012 => 271,  1009 => 270,  1004 => 266,  979 => 260,  976 => 259,  973 => 258,  970 => 257,  967 => 256,  964 => 255,  961 => 254,  958 => 253,  955 => 252,  952 => 251,  950 => 250,  947 => 249,  939 => 243,  936 => 242,  934 => 241,  931 => 240,  923 => 236,  920 => 235,  918 => 234,  915 => 233,  903 => 229,  900 => 228,  897 => 227,  894 => 226,  892 => 225,  889 => 224,  881 => 220,  878 => 219,  876 => 218,  873 => 217,  865 => 213,  862 => 212,  857 => 210,  849 => 206,  844 => 204,  841 => 203,  828 => 197,  817 => 192,  814 => 191,  801 => 185,  798 => 184,  793 => 182,  785 => 178,  783 => 177,  772 => 172,  751 => 163,  724 => 154,  721 => 153,  715 => 151,  707 => 148,  697 => 141,  696 => 140,  695 => 139,  689 => 137,  675 => 132,  638 => 118,  635 => 117,  619 => 113,  614 => 111,  596 => 106,  564 => 99,  555 => 95,  547 => 93,  512 => 84,  503 => 81,  490 => 77,  467 => 72,  433 => 60,  426 => 58,  405 => 49,  390 => 43,  311 => 14,  245 => 335,  350 => 26,  449 => 198,  446 => 197,  441 => 196,  431 => 189,  270 => 102,  226 => 84,  207 => 269,  378 => 157,  345 => 147,  340 => 145,  290 => 5,  259 => 103,  810 => 492,  796 => 183,  792 => 488,  788 => 486,  749 => 162,  746 => 161,  727 => 476,  706 => 473,  702 => 472,  690 => 469,  686 => 468,  677 => 465,  634 => 456,  625 => 453,  620 => 451,  601 => 446,  532 => 410,  363 => 32,  357 => 123,  212 => 279,  672 => 345,  664 => 342,  651 => 337,  644 => 335,  640 => 119,  629 => 454,  626 => 325,  622 => 452,  613 => 320,  606 => 449,  591 => 309,  569 => 300,  563 => 298,  559 => 296,  519 => 278,  515 => 85,  497 => 267,  471 => 253,  465 => 249,  436 => 235,  428 => 59,  380 => 160,  376 => 205,  367 => 339,  353 => 328,  297 => 104,  295 => 178,  982 => 261,  872 => 754,  868 => 753,  863 => 752,  860 => 211,  856 => 746,  853 => 745,  850 => 744,  846 => 205,  843 => 68,  840 => 67,  836 => 49,  833 => 199,  825 => 196,  821 => 756,  819 => 751,  813 => 747,  811 => 744,  830 => 198,  827 => 269,  822 => 264,  818 => 262,  812 => 190,  809 => 189,  807 => 491,  802 => 255,  794 => 254,  791 => 253,  789 => 252,  786 => 251,  780 => 176,  778 => 248,  775 => 485,  769 => 171,  767 => 170,  764 => 169,  758 => 241,  756 => 165,  753 => 164,  747 => 237,  745 => 236,  742 => 235,  739 => 156,  735 => 189,  732 => 188,  729 => 155,  725 => 276,  723 => 269,  718 => 266,  716 => 234,  712 => 150,  709 => 232,  703 => 229,  700 => 228,  698 => 471,  687 => 221,  684 => 220,  682 => 467,  679 => 466,  674 => 215,  665 => 212,  662 => 125,  648 => 210,  642 => 208,  631 => 327,  623 => 201,  621 => 200,  618 => 199,  597 => 197,  588 => 308,  576 => 101,  552 => 293,  549 => 411,  546 => 165,  540 => 162,  508 => 153,  505 => 270,  501 => 80,  493 => 78,  491 => 147,  488 => 146,  472 => 142,  463 => 248,  460 => 139,  454 => 244,  438 => 236,  410 => 221,  394 => 168,  373 => 156,  190 => 76,  598 => 107,  594 => 196,  586 => 192,  575 => 180,  573 => 179,  558 => 169,  554 => 171,  545 => 291,  529 => 92,  524 => 90,  517 => 404,  485 => 145,  478 => 74,  473 => 254,  458 => 107,  451 => 103,  447 => 135,  442 => 62,  418 => 224,  412 => 222,  401 => 172,  356 => 121,  334 => 141,  328 => 139,  320 => 127,  317 => 185,  307 => 128,  206 => 58,  198 => 55,  195 => 54,  172 => 64,  392 => 104,  389 => 160,  377 => 37,  349 => 90,  332 => 20,  324 => 113,  287 => 68,  282 => 66,  276 => 395,  234 => 48,  231 => 83,  218 => 59,  12 => 34,  710 => 149,  704 => 210,  701 => 209,  699 => 142,  693 => 224,  683 => 135,  666 => 126,  660 => 464,  652 => 193,  649 => 122,  632 => 190,  615 => 198,  610 => 187,  605 => 186,  602 => 317,  593 => 105,  589 => 178,  587 => 177,  582 => 190,  565 => 174,  544 => 172,  539 => 171,  536 => 161,  533 => 284,  530 => 168,  527 => 91,  522 => 406,  507 => 157,  495 => 138,  477 => 127,  470 => 73,  464 => 71,  459 => 69,  450 => 64,  425 => 135,  411 => 126,  406 => 163,  400 => 47,  397 => 213,  395 => 118,  385 => 41,  371 => 35,  352 => 91,  344 => 24,  339 => 120,  336 => 99,  333 => 98,  329 => 131,  266 => 366,  244 => 65,  233 => 304,  205 => 108,  200 => 72,  188 => 90,  178 => 66,  118 => 49,  90 => 27,  306 => 286,  303 => 122,  300 => 121,  286 => 112,  280 => 59,  274 => 110,  263 => 365,  236 => 35,  216 => 79,  192 => 53,  70 => 19,  77 => 25,  181 => 232,  175 => 65,  161 => 202,  553 => 186,  548 => 292,  541 => 290,  537 => 178,  525 => 280,  520 => 170,  516 => 155,  513 => 160,  511 => 159,  506 => 153,  502 => 140,  499 => 268,  496 => 79,  489 => 262,  483 => 258,  479 => 256,  475 => 143,  462 => 202,  448 => 240,  421 => 126,  414 => 52,  408 => 50,  403 => 48,  399 => 136,  391 => 125,  388 => 42,  386 => 159,  375 => 106,  372 => 105,  354 => 92,  348 => 140,  342 => 23,  325 => 129,  313 => 15,  310 => 89,  308 => 13,  302 => 125,  296 => 121,  292 => 135,  255 => 353,  184 => 233,  180 => 124,  155 => 47,  146 => 181,  137 => 59,  126 => 147,  694 => 138,  685 => 406,  680 => 134,  678 => 133,  668 => 344,  663 => 199,  658 => 124,  654 => 123,  647 => 336,  643 => 120,  637 => 205,  633 => 377,  627 => 374,  617 => 112,  609 => 319,  599 => 184,  592 => 195,  585 => 307,  581 => 305,  579 => 187,  577 => 303,  571 => 178,  567 => 414,  557 => 96,  550 => 94,  542 => 321,  538 => 319,  531 => 283,  526 => 310,  518 => 307,  514 => 160,  509 => 83,  504 => 156,  492 => 137,  486 => 292,  481 => 128,  466 => 280,  456 => 68,  452 => 272,  445 => 267,  443 => 138,  439 => 195,  429 => 188,  424 => 129,  422 => 184,  420 => 112,  415 => 180,  396 => 234,  383 => 207,  366 => 33,  361 => 146,  346 => 102,  335 => 21,  331 => 140,  326 => 138,  304 => 181,  291 => 102,  272 => 158,  267 => 101,  242 => 113,  152 => 46,  114 => 111,  104 => 90,  97 => 16,  124 => 132,  76 => 31,  321 => 135,  318 => 111,  316 => 16,  288 => 4,  284 => 67,  279 => 65,  275 => 105,  256 => 96,  253 => 342,  250 => 341,  237 => 64,  232 => 88,  222 => 297,  215 => 280,  210 => 270,  191 => 246,  185 => 66,  153 => 56,  110 => 38,  194 => 248,  186 => 239,  170 => 56,  160 => 59,  150 => 55,  129 => 148,  84 => 41,  65 => 17,  358 => 151,  351 => 141,  347 => 191,  343 => 146,  338 => 135,  327 => 114,  323 => 128,  319 => 92,  315 => 125,  301 => 80,  299 => 8,  293 => 6,  289 => 113,  281 => 411,  277 => 78,  271 => 374,  265 => 105,  262 => 98,  260 => 363,  257 => 149,  251 => 67,  248 => 336,  239 => 97,  228 => 68,  225 => 298,  213 => 78,  211 => 81,  202 => 266,  197 => 249,  174 => 217,  165 => 60,  148 => 101,  134 => 161,  127 => 35,  113 => 40,  53 => 11,  23 => 13,  34 => 5,  100 => 36,  81 => 30,  58 => 14,  20 => 1,  480 => 75,  474 => 285,  469 => 141,  461 => 70,  457 => 245,  453 => 199,  444 => 238,  440 => 148,  437 => 61,  435 => 132,  430 => 131,  427 => 130,  423 => 57,  413 => 134,  409 => 87,  407 => 242,  402 => 215,  398 => 128,  393 => 211,  387 => 164,  384 => 126,  381 => 115,  379 => 119,  374 => 36,  368 => 34,  365 => 197,  362 => 94,  360 => 109,  355 => 27,  341 => 118,  337 => 22,  322 => 72,  314 => 85,  312 => 124,  309 => 129,  305 => 74,  298 => 120,  294 => 61,  285 => 3,  283 => 115,  278 => 410,  268 => 373,  264 => 84,  258 => 354,  252 => 70,  247 => 66,  241 => 90,  229 => 85,  220 => 290,  214 => 99,  177 => 48,  169 => 210,  140 => 58,  132 => 67,  128 => 47,  107 => 37,  61 => 2,  273 => 394,  269 => 107,  254 => 102,  243 => 327,  240 => 326,  238 => 312,  235 => 311,  230 => 303,  227 => 301,  224 => 81,  221 => 67,  219 => 29,  217 => 289,  208 => 76,  204 => 267,  179 => 224,  159 => 196,  143 => 51,  135 => 45,  119 => 117,  102 => 30,  71 => 19,  67 => 18,  63 => 21,  59 => 17,  28 => 3,  201 => 106,  196 => 92,  183 => 125,  171 => 216,  166 => 209,  163 => 53,  158 => 62,  156 => 195,  151 => 188,  142 => 58,  138 => 46,  136 => 168,  121 => 131,  117 => 39,  105 => 34,  91 => 29,  62 => 16,  49 => 12,  94 => 57,  89 => 35,  85 => 26,  75 => 22,  68 => 20,  56 => 14,  87 => 26,  21 => 2,  93 => 28,  88 => 30,  78 => 24,  46 => 10,  27 => 7,  44 => 8,  31 => 4,  25 => 1,  38 => 7,  26 => 3,  24 => 2,  19 => 1,  79 => 32,  72 => 21,  69 => 21,  47 => 10,  40 => 8,  37 => 7,  22 => 2,  246 => 93,  157 => 89,  145 => 74,  139 => 169,  131 => 160,  123 => 42,  120 => 31,  115 => 40,  111 => 110,  108 => 33,  101 => 33,  98 => 29,  96 => 67,  83 => 30,  74 => 22,  66 => 12,  55 => 12,  52 => 12,  50 => 10,  43 => 9,  41 => 7,  35 => 4,  32 => 4,  29 => 3,  209 => 96,  203 => 73,  199 => 265,  193 => 73,  189 => 240,  187 => 75,  182 => 87,  176 => 223,  173 => 85,  168 => 61,  164 => 203,  162 => 59,  154 => 189,  149 => 182,  147 => 54,  144 => 176,  141 => 175,  133 => 49,  130 => 46,  125 => 51,  122 => 41,  116 => 116,  112 => 39,  109 => 105,  106 => 104,  103 => 34,  99 => 68,  95 => 34,  92 => 31,  86 => 46,  82 => 26,  80 => 24,  73 => 23,  64 => 17,  60 => 20,  57 => 39,  54 => 15,  51 => 37,  48 => 10,  45 => 11,  42 => 7,  39 => 10,  36 => 5,  33 => 4,  30 => 3,);
    }
}
